
import Statistics from "./Statistics";
import { Provider } from "react-redux";
import { store, asyncFetch } from "../chartSlice.js";
import { fetchActions, selectActions } from "../chartSlice.js";
import moment from "moment";

function ShowChart() {

    // //스토어 변경사항 감시 (안해도 되나?)
    // store.subscribe(() => {
    //   console.log(store.getState());
    // });

    //스토어에 asyncFetch 액션들을 디스패치
    store.dispatch(asyncFetch());

    // const option = {
    //     title: {
    //       text: '전체 제품',
    //       subtext: '제품 판매량 변화',
    //       subtextStyle: {
    //         color: '#FFF'
    //       }
    //     },
    //     tooltip: {
    //       trigger: 'axis'
    //     },
    //     legend: {
    //       data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine']
    //     },
    //     grid: {
    //       left: '3%',
    //       right: '4%',
    //       bottom: '3%',
    //       containLabel: true
    //     },
    //     toolbox: {
    //       feature: {
    //         saveAsImage: {}
    //       }
    //     },
    //     xAxis: {
    //       type: 'category',
    //       boundaryGap: false,
    //       data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']
    //     },
    //     yAxis: {
    //       type: 'value'
    //     },
    //     series: [
    //       {
    //         name: 'Email',
    //         type: 'line',
    //         stack: 'Total',
    //         smooth: true,
    //         data: [120, 132, 101, 134, 90, 230, 210]
    //       },
    //       {
    //         name: 'Union Ads',
    //         type: 'line',
    //         stack: 'Total',
    //         smooth: true,
    //         data: [220, 182, 191, 234, 290, 330, 310]
    //       },
    //       {
    //         name: 'Video Ads',
    //         type: 'line',
    //         stack: 'Total',
    //         smooth: true,
    //         data: [150, 232, 201, 154, 190, 330, 410]
    //       },
    //       {
    //         name: 'Direct',
    //         type: 'line',
    //         stack: 'Total',
    //         smooth: true,
    //         data: [320, 332, 301, 334, 390, 330, 320]
    //       },
    //       {
    //         name: 'Search Engine',
    //         type: 'line',
    //         stack: 'Total',
    //         smooth: true,
    //         data: [820, 932, 901, 934, 1290, 1330, 1320]
    //       }
    //     ]
    //   };
    const options = [];

    // 0 =====================================================
    options.push({
        title: {
            text: '전체 매출',
            subtext: '제품별 판매량 변화',
            subtextStyle: {
                color: '#FFF'
            }
        },
        xAxis: {
            axisLabel: {
                formatter: axisValue => {
                    return moment(axisValue).format("YYYY-MM-DD HH:mm");
                }
            },
            type: "time"
        },
        yAxis: {
            type: "value"
        },
        series: [
            {
                type: "line",
                data: [
                    ["2019-10-01", 100],
                    ["2019-10-02", 200],
                    ["2019-10-03", 300],
                    ["2019-10-04", 200],
                    ["2019-10-05", 100],
                    ["2019-10-06", 500],
                    ["2019-10-07", 300],
                    ["2019-10-08", 500],
                    ["2019-10-09", 200],
                    ["2019-10-10", 100],
                    ["2019-10-11", 100],
                    ["2019-10-12", 200],
                    ["2019-10-13", 300],
                    ["2019-10-14", 400],
                    ["2019-10-15", 500],
                    ["2019-10-16", 200],
                    ["2019-10-17", 100],
                    ["2019-10-18", 100],
                    ["2019-10-19", 500],
                    ["2019-10-20", 300],
                    ["2019-10-21", 500],
                    ["2019-10-22", 100],
                    ["2019-10-23", 300],
                    ["2019-10-24", 400],
                    ["2019-10-25", 500],
                    ["2019-10-26", 100],
                    ["2019-10-27", 300],
                    ["2019-10-28", 400],
                    ["2019-10-30", 200],
                    ["2019-10-31", 300],
                    ["2019-10-29", 500],
                  ]
            }
        ]
    });

    // 1 =====================================================
    options.push({
        title: {
            text: '전체 제품',
            subtext: '제품 판매량 변화',
            subtextStyle: {
                color: '#FFF'
            }
        },
        xAxis: {
            axisLabel: {
                formatter: axisValue => {
                    return moment(axisValue).format("YYYY-MM-DD HH:mm");
                }
            },
            type: "time"
        },
        yAxis: {
            type: "value"
        },
        series: [
            {
                type: "line",
                data: [
                    ["2019-10-01", 100],
                    ["2019-10-02", 200],
                    ["2019-10-03", 300],
                    ["2019-10-04", 200],
                    ["2019-10-05", 100],
                    ["2019-10-06", 500],
                    ["2019-10-07", 300],
                    ["2019-10-08", 500],
                    ["2019-10-09", 200],
                    ["2019-10-10", 100],
                    ["2019-10-11", 100],
                    ["2019-10-12", 200],
                    ["2019-10-13", 300],
                    ["2019-10-14", 400],
                    ["2019-10-15", 500],
                    ["2019-10-16", 200],
                    ["2019-10-17", 100],
                    ["2019-10-29", 500],
                    ["2019-10-18", 100],
                    ["2019-10-19", 500],
                    ["2019-10-20", 300],
                    ["2019-10-21", 500],
                    ["2019-10-22", 100],
                    ["2019-10-23", 300],
                    ["2019-10-24", 400],
                    ["2019-10-25", 500],
                    ["2019-10-26", 100],
                    ["2019-10-27", 300],
                    ["2019-10-28", 400],
                    ["2019-10-30", 200],
                    ["2019-10-31", 300]
                  ]
            }
        ]
    });

    // 2 =====================================================
    options.push({
        title: {
            text: '전체 제품',
            subtext: '제품 판매량 변화',
            subtextStyle: {
                color: '#FFF'
            }
        },
        xAxis: {
            axisLabel: {
                formatter: axisValue => {
                    return moment(axisValue).format("YYYY-MM-DD HH:mm");
                }
            },
            type: "time"
        },
        yAxis: {
            type: "value"
        },
        series: [
            {
                type: "line",
                data: [
                    ["2019-10-01", 100],
                    ["2019-10-02", 200],
                    ["2019-10-03", 300],
                    ["2019-10-04", 200],
                    ["2019-10-05", 100],
                    ["2019-10-06", 500],
                    ["2019-10-07", 300],
                    ["2019-10-08", 500],
                    ["2019-10-09", 200],
                    ["2019-10-10", 100],
                    ["2019-10-11", 100],
                    ["2019-10-12", 200],
                    ["2019-10-13", 300],
                    ["2019-10-14", 400],
                    ["2019-10-15", 500],
                    ["2019-10-16", 200],
                    ["2019-10-17", 100],
                    ["2019-10-18", 100],
                    ["2019-10-19", 500],
                    ["2019-10-20", 300],
                    ["2019-10-21", 500],
                    ["2019-10-22", 100],
                    ["2019-10-23", 300],
                    ["2019-10-24", 400],
                    ["2019-10-29", 500],
                    ["2019-10-25", 500],
                    ["2019-10-26", 100],
                    ["2019-10-27", 300],
                    ["2019-10-28", 400],
                    ["2019-10-30", 200],
                    ["2019-10-31", 300]
                  ]
            }
        ]
    });

    // 3 =====================================================
    options.push({
        title: {
            text: '전체 제품',
            subtext: '제품 판매량 변화',
            subtextStyle: {
                color: '#FFF'
            }
        },
        xAxis: {
            axisLabel: {
                formatter: axisValue => {
                    return moment(axisValue).format("YYYY-MM-DD HH:mm");
                }
            },
            type: "time"
        },
        yAxis: {
            type: "value"
        },
        series: [
            {
                type: "line",
                data: [
                    ["2019-10-01", 100],
                    ["2019-10-02", 200],
                    ["2019-10-03", 300],
                    ["2019-10-04", 200],
                    ["2019-10-05", 100],
                    ["2019-10-06", 500],
                    ["2019-10-07", 300],
                    ["2019-10-08", 500],
                    ["2019-10-09", 200],
                    ["2019-10-10", 100],
                    ["2019-10-11", 100],
                    ["2019-10-12", 200],
                    ["2019-10-13", 300],
                    ["2019-10-14", 400],
                    ["2019-10-15", 500],
                    ["2019-10-16", 200],
                    ["2019-10-17", 100],
                    ["2019-10-18", 100],
                    ["2019-10-19", 500],
                    ["2019-10-20", 300],
                    ["2019-10-21", 500],
                    ["2019-10-22", 100],
                    ["2019-10-23", 300],
                    ["2019-10-29", 500],
                    ["2019-10-24", 400],
                    ["2019-10-25", 500],
                    ["2019-10-26", 100],
                    ["2019-10-27", 300],
                    ["2019-10-28", 400],
                    ["2019-10-30", 200],
                    ["2019-10-31", 300]
                  ]
            }
        ]
    });

    // 4 =====================================================
    options.push({
        title: {
            text: '전체 제품',
            subtext: '제품 판매량 변화',
            subtextStyle: {
                color: '#FFF'
            }
        },
        xAxis: {
            axisLabel: {
                formatter: axisValue => {
                    return moment(axisValue).format("YYYY-MM-DD HH:mm");
                }
            },
            type: "time"
        },
        yAxis: {
            type: "value"
        },
        series: [
            {
                type: "line",
                data: [
                    ["2019-10-01", 100],
                    ["2019-10-02", 200],
                    ["2019-10-03", 300],
                    ["2019-10-04", 200],
                    ["2019-10-05", 100],
                    ["2019-10-06", 500],
                    ["2019-10-07", 300],
                    ["2019-10-08", 500],
                    ["2019-10-09", 200],
                    ["2019-10-10", 100],
                    ["2019-10-11", 100],
                    ["2019-10-12", 200],
                    ["2019-10-13", 300],
                    ["2019-10-14", 400],
                    ["2019-10-15", 500],
                    ["2019-10-16", 200],
                    ["2019-10-17", 100],
                    ["2019-10-18", 100],
                    ["2019-10-19", 500],
                    ["2019-10-20", 300],
                    ["2019-10-21", 500],
                    ["2019-10-22", 100],
                    ["2019-10-23", 300],
                    ["2019-10-24", 400],
                    ["2019-10-25", 500],
                    ["2019-10-26", 100],
                    ["2019-10-27", 300],
                    ["2019-10-28", 400],
                    ["2019-10-29", 500],
                    ["2019-10-30", 200],
                    ["2019-10-31", 300],
                  ]
            }
        ]
    });

    //스토어에 init 액션을 디스패치
    store.dispatch(fetchActions.init(options));


	const yearOptions = [];
	for (let year = 2023; year >= 2008; year--) {
		yearOptions.push(year);
	}
    console.log("dydy" ,yearOptions);
    //스토어에 init 액션을 디스패치
    store.dispatch(selectActions.setYearOptions(yearOptions));

    return (
        <Provider store={store}>
            {/* 이하 컴포넌트에서 Redux 스토어의 상태를 useSelector()로 사용 */}
            {/* useSelector()를 사용할 때, 해당 변수 값이 바뀌면 리렌더링 됨 */}
            <div>
                <Statistics />
            </div>
        </Provider>
    );
}
export default ShowChart;

/*
1. configureStore로 스토어 생성:
코드의 시작에서 configureStore를 사용하여 Redux 스토어를 생성합니다.
스토어의 구성은 reducer로 지정되며, 여기에서 chart라는 리듀서를 등록하고 있습니다.

2. store.subscribe 메서드:
스토어를 생성한 후 store.subscribe 메서드를 호출하여 스토어의 변경 사항을 감시합니다.
변경 사항이 있을 때마다 콜백 함수가 호출되며, 이 콜백 함수에서는 현재 스토어의 상태를 콘솔에 출력합니다.
이 부분은 스토어의 상태 변경을 실시간으로 확인하기 위한 디버깅 목적으로 사용될 수 있습니다.

3. store.dispatch(asyncFetch()):
asyncFetch 액션을 디스패치합니다.
이것은 Redux Toolkit에서 생성한 비동기 액션으로, 비동기 작업을 수행하고 결과를 스토어에 업데이트하는 역할을 합니다.
액션을 디스패치하면 createAsyncThunk에서 정의한 작업(비동기 작업)이 실행됩니다.
그러면 비동기 작업이 완료되면 상태를 업데이트하고, 스토어의 상태가 변경되면 store.subscribe에서 등록한 콜백 함수가 호출되어 변경된 상태를 콘솔에 출력합니다.

4. <Provider store={store}>:
Provider 컴포넌트는 리액트 애플리케이션 내에서 Redux 스토어를 사용할 수 있게 해주는 컴포넌트입니다.
이 코드에서는 Provider로 Redux 스토어를 감싸고 있으므로 하위 컴포넌트에서 Redux 스토어의 상태를 사용할 수 있습니다.

5. <Statistics /> 컴포넌트:
이 컴포넌트는 Redux 스토어의 상태를 사용하는 것으로 보입니다.
Redux 스토어의 상태를 가져오기 위해 useSelector를 사용하는 것으로 예상됩니다.
이 코드의 주요 목적은 Redux 스토어를 생성하고, 스토어에 변경 사항을 감시하며, 비동기 액션을 디스패치하여 상태를 업데이트하는 것입니다. Statistics 컴포넌트는 이 업데이트된 상태를 사용하여 UI를 업데이트하는 역할을 할 것으로 예상됩니다.
 */